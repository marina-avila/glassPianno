/* FILE:    HCPCA9685_Servo_Example
   DATE:    10/06/16
   VERSION: 0.1
   AUTHOR:  Andrew Davies

   Sketch created by Hobby Components Ltd (HOBBYCOMPONENTS.COM)
   
10/06/16 version 0.1: Original version


This example demonstrates how to use the HCPCA9685 library together with the PCA9685
to control up to 16 servos. The sketch will initialise the library putting it into 
'servo mode' and then will continuously sweep one servo connected to PWM output 0 
back and forth. The example has been written particularly for the 16 Channel 12-bit 
PWM Servo Motor Driver Module (HCMODU0097) available from hobbycomponents.com 

To use the module connect it to your Arduino as follows:

PCA9685...........Uno/Nano
GND...............GND
OE................N/A
SCL...............A5
SDA...............A4
VCC...............5V

External 5V Power for the servo(s) can be supplied by the V+ and GND input of the 
screw terminal block.

PLEASE NOTE: Depending on your servo it is possible for this sketch to attempt 
drive the servo beyond its end stops. If your servo is hitting its end stops then
you should adjust the the min and max values in this sketch.

You may copy, alter and reuse this code in any way you like, but please leave
reference to HobbyComponents.com in your comments if you redistribute this code.
This software may not be used directly for the purpose of selling products that
directly compete with Hobby Components Ltd's own range of products.

THIS SOFTWARE IS PROVIDED "AS IS". HOBBY COMPONENTS MAKES NO WARRANTIES, WHETHER
EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE, ACCURACY OR LACK OF NEGLIGENCE.
HOBBY COMPONENTS SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR ANY DAMAGES,
INCLUDING, BUT NOT LIMITED TO, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY
REASON WHATSOEVER.
*/


/* Include the HCPCA9685 library */
#include "HCPCA9685.h"
#define I2CAdd 0x40

const int pianoScore[620] PROGMEM = {
0b1000000000,
0b0000000000,
0b0000000000,
0b0000100010,
0b0100000000,
0b0000000000,
0b0010001000,
0b0000000000,
0b0000000100,
0b0001000000,
0b0000000000,
0b0000000000,
0b0000010000,
0b0100000000,
0b0000000000,
0b0000000000,
0b0010000000,
0b0000000000,
0b0000000000,
0b0101000000,
0b0000101000,
0b0000000000,
0b0100000000,
0b0000000000,
0b0000000100,
0b0000000000,
0b0000000000,
0b0000000000,
0b0000000000,
0b0001000001,
0b0000000100,
0b0000000000,
0b1000000000,
0b0000000000,
0b0000100000,
0b0100000000,
0b0001001000,
0b0000000000,
0b0100000000,
0b0000000000,
0b0000010000,
0b0000100000,
0b0000000000,
0b0000000000,
0b0001000000,
0b0100000000,
0b0000000000,
0b0000000000,
0b1000000000,
0b0000000000,
0b0000000000,
0b0010000010,
0b0000101000,
0b0000000000,
0b0010000000,
0b0000000000,
0b0000000100,
0b0000001000,
0b0000000000,
0b0000000000,
0b0000000000,
0b0001010100,
0b0000000000,
0b0000000000,
0b1000000100,
0b0000000000,
0b0000000000,
0b0000100000,
0b0100010000,
0b0000000000,
0b0010000000,
0b0000000000,
0b0000000000,
0b0001000000,
0b0000000000,
0b0000000010,
0b0000001000,
0b0100000000,
0b0000000000,
0b0000000000,
0b0010000100,
0b0000000000,
0b0000000000,
0b0100000000,
0b0000100000,
0b0000000001,
0b0010000100,
0b0000000000,
0b0000000000,
0b0000001000,
0b0000000000,
0b0000100000,
0b0000000100,
0b0001000000,
0b0000000000,
0b0000000000,
0b1000010000,
0b0000000000,
0b0000000000,
0b0100000000,
0b0001000001,
0b0000000000,
0b0010000000,
0b0000000000,
0b0000000000,
0b0000100000,
0b0000000000,
0b0000100000,
0b0000001000,
0b0100000000,
0b0000000000,
0b0000000000,
0b0010000100,
0b0000000000,
0b0000000000,
0b1000000000,
0b0000010000,
0b0000000100,
0b0010010000,
0b0000000000,
0b0000000000,
0b0000001000,
0b0000000000,
0b0000000010,
0b0000001000,
0b0000010000,
0b0000000000,
0b0000000000,
0b0010000000,
0b0000000000,
0b0000000000,
0b0000101000,
0b0000010010,
0b0000000000,
0b0000001010,
0b0000000000,
0b0000000001,
0b0000000100,
0b0000000000,
0b0000000000,
0b0000000010,
0b0000010100,
0b0000000000,
0b0000000000,
0b0010000000,
0b0000000000,
0b0000000000,
0b0000010100,
0b0000000101,
0b0000000000,
0b0000010000,
0b0000000000,
0b0000000001,
0b0010000000,
0b0000000000,
0b0000000000,
0b0000000000,
0b0000010010,
0b0000000001,
0b0000000000,
0b0010000000,
0b0000000000,
0b0000000000,
0b0000100001,
0b0000010100,
0b0000000000,
0b0000001000,
0b0000000000,
0b0000000001,
0b0000000100,
0b0000000000,
0b0000000000,
0b0000000001,
0b0000010000,
0b0000000000,
0b0000000000,
0b0010000000,
0b0000000000,
0b0000000000,
0b0000100100,
0b0000000101,
0b0000000000,
0b0000010000,
0b0000000000,
0b0000000100,
0b0000010000,
0b0000000000,
0b0000000000,
0b0000000000,
0b0000010100,
0b0000001000,
0b0000000000,
0b0010000100,
0b0000000000,
0b0000000000,
0b0000100000,
0b0000010000,
0b0000000000,
0b0000001000,
0b0000000000,
0b0000000000,
0b0000000100,
0b0000000000,
0b0000000001,
0b0000001000,
0b0000010000,
0b0000000000,
0b0000000000,
0b0010000001,
0b0000000000,
0b0000000000,
0b0000010100,
0b0000000101,
0b0000000000,
0b0000010000,
0b0000000000,
0b0000000000,
0b0010000000,
0b0000000000,
0b0000000100,
0b0000000001,
0b0000010000,
0b0000000000,
0b0000000000,
0b0010000000,
0b0000000000,
0b0000000000,
0b0000100001,
0b0000010100,
0b0000000000,
0b0000001000,
0b0000000000,
0b0000000001,
0b0000000100,
0b0000000000,
0b0000000000,
0b0000000001,
0b0000010000,
0b0000000000,
0b0000000000,
0b0010000000,
0b0000000000,
0b0000000000,
0b0000100100,
0b1000000001,
0b0000000000,
0b0000100000,
0b0000000000,
0b0000000100,
0b0000100000,
0b0000000000,
0b0000000000,
0b0000001000,
0b0010000100,
0b0000000010,
0b0000000001,
0b1000000000,
0b0000000000,
0b0000000000,
0b0000100010,
0b0100001000,
0b0000000000,
0b0010000000,
0b0000000000,
0b0000000100,
0b0001000000,
0b0000000000,
0b0000000000,
0b0000010000,
0b0100000000,
0b0000000000,
0b0000000000,
0b0010000000,
0b0000000000,
0b0000000000,
0b0100100000,
0b0000101000,
0b0000000000,
0b0010000000,
0b0000000000,
0b0000000100,
0b0000001000,
0b0000000000,
0b0000000001,
0b0000000100,
0b0001000000,
0b0000000000,
0b0000000000,
0b1000000000,
0b0000000000,
0b0000000000,
0b0100100000,
0b0001001000,
0b0000000000,
0b0010000000,
0b0000000000,
0b0000010000,
0b0000100000,
0b0000000000,
0b0000000000,
0b0001000000,
0b0100000000,
0b0000000000,
0b0000000000,
0b1000000000,
0b0000000000,
0b0000000000,
0b0010000010,
0b0000101000,
0b0000000000,
0b0010000000,
0b0000000000,
0b0000000100,
0b0000001000,
0b0000000000,
0b0000000000,
0b0000000000,
0b0001000100,
0b0000010000,
0b0000000000,
0b1000000100,
0b0000000000,
0b0000000000,
0b0000100000,
0b0100010000,
0b0000000000,
0b0010000000,
0b0000000000,
0b0000000000,
0b0001000000,
0b0000000000,
0b0000000010,
0b0000001000,
0b0100000000,
0b0000000000,
0b0000000000,
0b0010000100,
0b0000000000,
0b0000000000,
0b0100000000,
0b0000100000,
0b0000000000,
0b0010000000,
0b0000000001,
0b0000000100,
0b0000001000,
0b0000000000,
0b0000000000,
0b0000100000,
0b0001001000,
0b0000000000,
0b0000000000,
0b1000010000,
0b0000000000,
0b0000000000,
0b0100000000,
0b0001000100,
0b0000000000,
0b0010000000,
0b0000000000,
0b0000000000,
0b0000001000,
0b0000000000,
0b0000100000,
0b0000001000,
0b0100000000,
0b0000000000,
0b0000000000,
0b0010001000,
0b0000000100,
0b0000000010,
0b1000000001,
0b0000010000,
0b0000001000,
0b0010010000,
0b0000000000,
0b0000000000,
0b0000001000,
0b0000000000,
0b0000000010,
0b0000001000,
0b0000010100,
0b0000000010,
0b0000000001,
0b1000000100,
0b0100000000,
0b0010000000,
0b0001000001,
0b0000100010,
0b0000010000,
0b0000001001,
0b0000000100,
0b0000000010,
0b0000000001,
0b0000000010,
0b0000000100,
0b0000001000,
0b0000010100,
0b0000100000,
0b0001000000,
0b0010000010,
0b0000000000,
0b0100000000,
0b0000000100,
0b1000000010,
0b0000000000,
0b0000100100,
0b0000000000,
0b0000000000,
0b0000000001,
0b0000000000,
0b0000000000,
0b0000000000,
0b0000000100,
0b0000000000,
0b0000000000,
0b1000000000,
0b0000000000,
0b0000000000,
0b0000000000,
0b0000000101,
0b0000000000,
0b0000000000,
0b0000000000,
0b0000000000,
0b0000000010,
0b0000000000,
0b0000000000,
0b0000000000,
0b0000000010,
0b0000000000,
0b0000000000,
0b1000100010,
0b0000000000,
0b0000000000,
0b0000000100,
0b0000000001,
0b0000000000,
0b0000000010,
0b0000000000,
0b0000000000,
0b0000000001,
0b0000000000,
0b0000000000,
0b0000000000,
0b0000000100,
0b0000000000,
0b0000000000,
0b1100000010,
0b0000000000,
0b0000100000,
0b0000000100,
0b0110000001,
0b0000000000,
0b0000100010,
0b0000000000,
0b0000000000,
0b0001100100,
0b0010000000,
0b0000000000,
0b0000000000,
0b0001100001,
0b0010000000,
0b0000000000,
0b1100000100,
0b0000000000,
0b0000100000,
0b0000000100,
0b0110000001,
0b0000000000,
0b0000100001,
0b0000000000,
0b0000000100,
0b0001100100,
0b0010000000,
0b0000000000,
0b0000000100,
0b0001100100,
0b1000000000,
0b0000000000,
0b1100000010,
0b0000000000,
0b0000100000,
0b0000000100,
0b0110000001,
0b0000000000,
0b0000100010,
0b0000000000,
0b0000000100,
0b0001100000,
0b0010000000,
0b0000000000,
0b0000000100,
0b0001100000,
0b0010000000,
0b0000000000,
0b1100000100,
0b0000100000,
0b0000000000,
0b0000000100,
0b0110001000,
0b0000000000,
0b0000100000,
0b0000000000,
0b0000010000,
0b0001100000,
0b0010000000,
0b0000000000,
0b0000000100,
0b0001100000,
0b1000000000,
0b0000000000,
0b1100000100,
0b0000000000,
0b0000100000,
0b0000000000,
0b0110000100,
0b0000010000,
0b0000100000,
0b0000000000,
0b0000000000,
0b0001100000,
0b0010000000,
0b0000000010,
0b0000001000,
0b0001100000,
0b0010000000,
0b0000000000,
0b1100000100,
0b0000000000,
0b0000100000,
0b0000000000,
0b0110000000,
0b0000000001,
0b0000100100,
0b0000000000,
0b0000000001,
0b0001100100,
0b0010001000,
0b0000000100,
0b0000000010,
0b0001100000,
0b0010000000,
0b0000000000,
0b1100010000,
0b0000000000,
0b0000100000,
0b0001000000,
0b0110000000,
0b0000000000,
0b0000100000,
0b0000000000,
0b0000000000,
0b0001100000,
0b0010000000,
0b0000100000,
0b0000000100,
0b0001100000,
0b0010000000,
0b0000000000,
0b1100000100,
0b0000000000,
0b0000100000,
0b0000000000,
0b0110000000,
0b0000000100,
0b0000110000,
0b0000000000,
0b0000000000,
0b0001100000,
0b0010000000,
0b0000000010,
0b0000001000,
0b0001100000,
0b0010000000,
0b0000000000,
0b0000000011,
0b0000000010,
0b0000000101,
0b0000001100,
0b0000010000,
0b0000100000,
0b0001000000,
0b0010000000,
0b0000000000,
0b0100010000,
0b0000000000,
0b1000000000,
0b0000000000,
0b0100001000,
0b0000000000,
0b0010000000,
0b1000000100,
0b0100000000,
0b0010000000,
0b0001001000,
0b0000100010,
0b0000010000,
0b0010000100,
0b0001000000,
0b0000100000,
0b0000010100,
0b0000001000,
0b0000000100,
0b1000000000,
0b0001000000,
0b0100000000,
0b0000000000,
0b0000001000,
0b0000001000,
0b0000001000,
0b0000000001,
0b1000000000,
0b0000000000,
0b0100000000,
0b0000000000,
0b1000100001,
0b0000000100,
0b0000000100,
0b0000000100,
};

HCPCA9685 HCPCA9685(I2CAdd);

void setup() 
{
 Serial.begin(115200);
 HCPCA9685.Init(SERVO_MODE);
 HCPCA9685.Sleep(false);
}

size_t off = 0;

uint8_t notes[32];

#define S_OFF 100
#define S_ON  200
uint16_t servo_states[32] = {
S_OFF, S_OFF, S_OFF, S_OFF, S_OFF, S_OFF, S_OFF, S_OFF, 
S_OFF, S_OFF, S_OFF, S_OFF, S_OFF, S_OFF, S_OFF, S_OFF, 
S_OFF, S_OFF, S_OFF, S_OFF, S_OFF, S_OFF, S_OFF, S_OFF, 
S_OFF, S_OFF, S_OFF, S_OFF, S_OFF, S_OFF, S_OFF, S_OFF, 
};

uint8_t tick_tape() {
 
 int note = pgm_read_word(pianoScore + off);
 for(int n = 0; n < 10 ; n ++) {
  notes[n] = (note & (1 << (9 - n))) ? 1 : 0;
 }
 off++;
 if(off >= 620) {
  off = 0;
 }
 return 250;
}

void setServo(int s, int on) {
 HCPCA9685.Servo(s, on ? 35 : 10);
}

void loop() {
 unsigned int Pos;
 uint8_t t = tick_tape();

////  Serial.print("t: "); Serial.print(t); Serial.print(" off: "); Serial.print(off);
for (byte b = 0; b < 10; b++) {
setServo(b, notes[b]);
}

delay(t);

//setServo(9, false),
//setServo(10, true),
//delay(250);
//setServo(10, false),
//delay(250);
}
